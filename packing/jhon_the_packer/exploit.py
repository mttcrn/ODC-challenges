from pwn import xor

f = open("./john", "rb")
content = f.read() #directly read the content

base = 0x8048000
address = 0x0804970E

def unpack(address, size, key):
  unpacked = b''
  offset = address - base
  for i in range(0, size*4, 4): #4 bytes at a time 
    unpacked += xor(content[offset + i: offset + i+4], key) # start unpacking from the offset w.r.t. the file
  return unpacked

# taken from the executable memory
keys = [b'\x04\x03\x02\x01', b'\x40\x30\x20\x10', b'B00B', b'DEAD', b'\xff\xff\xff\xff']

key = keys[address%5]
unpacked = unpack(address, 83, key) # it contains only the unpacked function

# reconstruct the entire binary with the unpacked function
with open('john_unpacked', 'wb') as f:
  new_content = content[:address-base] + unpacked + content[address-base+len(unpacked):]
  f.write(new_content)
