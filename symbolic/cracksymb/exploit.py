from z3 import *
from pwn import *

if(len(sys.argv)>1):
  if(sys.argv[1] == '-r'):
    c = remote('cracksymb.training.offensivedefensive.it', 8080, ssl=True)
else:
  c = process("./cracksymb")

strlen = 23

#create symbolic input
a1 = [z3.BitVec(f"c_{i}", 32) for i in range (strlen)]

solver = z3.Solver()

#only printable characters
for i in range(strlen):
  solver.add(a1[i] >= 0x20, a1[i] <= 0x7e)

solver.add(a1[0] == ord('f'))
solver.add(a1[1] == ord('l'))
solver.add(a1[2] == ord('a'))
solver.add(a1[3] == ord('g'))
solver.add(a1[4] == ord('{'))
solver.add(a1[22] == ord('}'))

#if return 1
solver.add(
     (-183* a1[0]
     + -181 * a1[7]
     + -166 * a1[20]
     + 225 * a1[21]
     + -106 * a1[5]
     + -170 * a1[6]
     + 185 * a1[18]
     + 124 * a1[16]
     + -102 * a1[17]
     + 154 * a1[4]
     + 198 * a1[14]
     + -149 * a1[19]
     + 115 * a1[3]
     + -155 * a1[15]
     + 183 * a1[13]
     + -71 * a1[12]
     + -189 * a1[9]
     + 215 * a1[22]
     + 187 * a1[10]
     + 49 * a1[8]
     - 39978
     + 57 * a1[1]
     + 3 * a1[2]) == 25 * a1[11]
)

#if return 2
solver.add(
     (226 * a1[3]
     + -222 * a1[9]
     + 131 * a1[13]
     + -17 * a1[19]
     + -14 * a1[22]
     + -158 * a1[12]
     + -253 * a1[0]
     + -97 * a1[7]
     + 231 * a1[16]
     + 238 * a1[5]
     + 252 * a1[10]
     + 224 * a1[15]
     + -88 * a1[6]
     - 174 * a1[8]
     + 125 * a1[20]
     - 60 * a1[1]
     - 94 * a1[2]
     - 224 * a1[18]
     - 137 * a1[11]
     - (a1[4] << 7)
     - 229 * a1[14]
     + 39470
     + 48 * a1[17]) == (85 * a1[21])
)

#if return 3
solver.add(
      (50 * a1[6]
     + 209 * a1[10]
     + -49 * a1[0]
     + 179 * a1[8]
     + -41 * a1[7]
     + 159 * a1[19]
     + 149 * a1[12]
     + -138 * a1[4]
     + 240 * a1[3]
     + 151 * a1[18]
     + 210 * a1[5]
     + 134 * a1[14]
     + 50 * a1[1]
     + 132 * a1[2]
     + 145 * a1[20]
     + 197 * a1[13]
     + -226 * a1[15]
     + 212 * a1[9]
     - 108 * a1[21]
     + 198 * a1[22]
     - 201293
     + 234 * a1[17]
     + 27 * a1[11]) == 57 * a1[16]
)


#if return 4
solver.add(
     (251 * a1[11]
     + -38 * a1[3]
     + 175 * a1[4]
     + 133 * a1[9]
     + -168 * a1[8]
     + 235 * a1[13]
     + 87 * a1[18]
     + 199 * a1[21]
     + -104 * a1[1]
     + -35 * a1[17]
     + 82 * a1[5]
     + -186 * a1[22]
     + -141 * a1[19]
     + 87 * a1[2]
     + 203 * a1[14]
     + -26 * a1[6]
     + 171 * a1[12]
     + 141 * a1[20]
     + 169 * a1[15]
     - 20 * a1[16]
     - 98 * a1[0]
     + 96 * a1[10]
     - 134174
     + 95 * a1[7]) == 0
)

#if return 5
solver.add(
     (-78 * a1[6]
     + 151 * a1[22]
     + 151 * a1[12]
     + 231 * a1[21]
     + -245 * a1[16]
     + 186 * a1[15]
     + 235 * a1[8]
     + -195 * a1[10]
     + 234 * a1[7]
     + 216 * a1[20]
     + -85 * a1[9]
     + -196 * a1[5]
     + 240 * a1[4]
     + 134 * a1[19]
     + 4 * a1[1]
     + 140 * a1[2]
     + -81 * a1[0]
     + 208 * a1[18]
     + 138 * a1[13]
     - (a1[3] << 7)
     - 112877
     - 181 * a1[17]
     - 20 * a1[14]
     + 35 * a1[11]) == 0
)

#if return 6
solver.add(
     ( 237 * a1[0]
     + -238 * a1[22]
     + -7 * a1[16]
     + 197 * a1[13]
     + -229 * a1[5]
     + 142 * a1[2]
     + 110 * a1[11]
     + 83 * a1[7]
     + -186 * a1[9]
     + -137 * a1[21]
     + 22 * a1[20]
     + 35 * a1[8]
     + -152 * a1[1]
     + -102 * a1[6]
     + 218 * a1[19]
     + 90 * a1[18]
     + -123 * a1[4]
     + 33 * a1[3]
     - 232 * a1[15]
     + 13 * a1[10]
     + 171 * a1[14]
     - (a1[17] << 7)
     - 15781
     + 214 * a1[12]) == 0
)

#if return 7
solver.add(
     (-106 * a1[21]
     + 233 * a1[19]
     + -69 * a1[15]
     + -204 * a1[0]
     + 57 * a1[3]
     + -13 * a1[13]
     + -141 * a1[17]
     + 145 * a1[11]
     + -111 * a1[20]
     + 14 * a1[9]
     + -53 * a1[14]
     + -198 * a1[10]
     + -159 * a1[16]
     + -140 * a1[8]
     + -38 * a1[12]
     + 139 * a1[5]
     + -167 * a1[4]
     + 221 * a1[18]
     + 122 * a1[6]
     - 80 * a1[2]
     - a1[22]
     - 166 * a1[7]
     + 45734
     + 168 * a1[1]) == 0
)

#if return 8
solver.add(
     ( -190 * a1[6]
     + 77 * a1[18]
     + 78 * a1[11]
     + 53 * a1[8]
     + 202 * a1[7]
     + 202 * a1[1]
     + -66 * a1[0]
     + 122 * a1[9]
     + -231 * a1[13]
     + 51 * a1[5]
     + 180 * a1[20]
     + 235 * a1[17]
     + 67 * a1[22]
     + 193 * a1[16]
     + -101 * a1[2]
     + -77 * a1[12]
     + 165 * a1[3]
     + 163 * a1[19]
     + 18 * a1[10]
     + 179 * a1[4]
     - 16 * a1[15]
     + 235 * a1[21]
     - 135132
     + 14 * a1[14]) == 0
)

#if return 9
solver.add(
     ( 71 * a1[18]
     + -91 * a1[20]
     + 240 * a1[2]
     + 242 * a1[6]
     + 209 * a1[4]
     + -15 * a1[11]
     + 45 * a1[8]
     + -178 * a1[22]
     + -211 * a1[0]
     + 8 * a1[19]
     + -78 * a1[12]
     + 103 * a1[21]
     + 85 * a1[9]
     + -161 * a1[3]
     + -245 * a1[1]
     + 170 * a1[15]
     + 196 * a1[16]
     + 67 * a1[14]
     + 197 * a1[7]
     + -23 * a1[13]
     - 216 * a1[5]
     - 78 * a1[10]
     + 18535) == (199 * a1[17])
)

#if return 10
solver.add(
     ( 143 * a1[7]
     + 180 * a1[1]
     + 187 * a1[18]
     + -169 * a1[12]
     + -58 * a1[13]
     + 135 * a1[11]
     + 59 * a1[10]
     + 86 * a1[5]
     + -218 * a1[22]
     + 211 * a1[3]
     + 249 * a1[20]
     + 74 * a1[16]
     + 202 * a1[8]
     + -111 * a1[15]
     + 195 * a1[19]
     + 247 * a1[0]
     + -209 * a1[2]
     + 99 * a1[6]
     + -253 * a1[9]
     - 15 * a1[4]
     + 91 * a1[14]
     - 78064
     - 252 * a1[17]
     + 237 * a1[21]) == 0
)

#if return 11
solver.add(
    ( 254 * a1[2]
     + -93 * a1[12]
     + -71 * a1[10]
     + -58 * a1[4]
     + 34 * a1[20]
     + -191 * a1[18]
     + -207 * a1[8]
     + 175 * a1[6]
     + -167 * a1[7]
     + -125 * a1[17]
     + -81 * a1[1]
     + -69 * a1[0]
     + -156 * a1[3]
     + 137 * a1[5]
     + 156 * a1[14]
     + 134 * a1[19]
     + -99 * a1[11]
     - 123 * a1[21]
     + 227 * a1[13]
     - 124 * a1[16]
     - 34 * a1[22]
     + 33620
     + 201 * a1[9]) == (32 * a1[15])
)

#if return 12
solver.add(
    ( -226 * a1[7]
     + 214 * a1[17]
     + 108 * a1[22]
     + 90 * a1[13]
     + -55 * a1[8]
     + 87 * a1[0]
     + -72 * a1[1]
     + -101 * a1[18]
     + 134 * a1[9]
     + 241 * a1[20]
     + 42 * a1[12]
     + -181 * a1[11]
     + 234 * a1[5]
     + -105 * a1[2]
     - 163 * a1[3]
     + 96 * a1[16]
     + 177 * a1[6]
     - 20 * a1[14]
     + 51 * a1[19]
     - 21447
     - 48 * a1[4]
     - 222 * a1[15]
     - 62 * a1[21]
     + 204 * a1[10]) == 0
)

#if reutrn 13
solver.add(
     (-132 * a1[2]
     + 26 * a1[1]
     + 240 * a1[5]
     + -184 * a1[19]
     + -164 * a1[12]
     + -7 * a1[0]
     + 242 * a1[15]
     + -49 * a1[16]
     + -79 * a1[22]
     + -184 * a1[13]
     + 2 * a1[20]
     + 116 * a1[9]
     + -167 * a1[6]
     + 71 * a1[14]
     + -153 * a1[11]
     - 78 * a1[3]
     + 35 * a1[8]
     + 11599
     - 80 * a1[18]
     + 196 * a1[17]
     - 40 * a1[7]
     + 141 * a1[10]
     - 2 * a1[21]
     + 57 * a1[4]) == 0
)

#if return 14
solver.add(
     ( -7 * a1[1]
     + -119 * a1[8]
     + 140 * a1[9]
     + 184 * a1[5]
     + -136 * a1[21]
     + 242 * a1[3]
     + 220 * a1[13]
     + -182 * a1[14]
     + -225 * a1[10]
     + -221 * a1[16]
     + -143 * a1[19]
     + 113 * a1[11]
     + 44 * a1[0]
     + -127 * a1[22]
     + -201 * a1[15]
     + -61 * a1[2]
     - 26 * a1[18]
     + 225 * a1[7]
     + 3766
     - 187 * a1[6]
     + 72 * a1[20]
     - 46 * a1[12]
     + 3 * a1[17]
     + 168 * a1[4]) == 0
)

#if return 15
solver.add(
     ( 158 * a1[14]
     + -134 * a1[13]
     + 116 * a1[21]
     + -185 * a1[10]
     + 101 * a1[22]
     + -142 * a1[0]
     + 140 * a1[9]
     + -71 * a1[4]
     + -27 * a1[5]
     + -74 * a1[6]
     + 60 * a1[11]
     + 236 * a1[8]
     + 39 * a1[16]
     + -145 * a1[12]
     + -79 * a1[20]
     + 208 * a1[7]
     + 167 * a1[15]
     + 130 * a1[2]
     - 90 * a1[17]
     - (a1[19] << 8)
     + 187 * a1[1]
     - 72 * a1[18]
     + 173 * a1[3]) == 25705
)

#if return 16
solver.add(
     ( -248 * a1[14]
     + 185 * a1[10]
     + -82 * a1[13]
     + 90 * a1[0]
     + 240 * a1[9]
     + 70 * a1[15]
     + -208 * a1[20]
     + 108 * a1[22]
     + 97 * a1[7]
     + 226 * a1[19]
     + 87 * a1[1]
     + -151 * a1[6]
     + -138 * a1[16]
     + 221 * a1[3]
     + -136 * a1[12]
     + 87 * a1[17]
     + 217 * a1[2]
     + 246 * a1[21]
     + 164 * a1[8]
     + 9 * a1[5]
     + 231 * a1[4]
     - 123517
     + 180 * a1[11]) == (192 * a1[18])
)

#if return 17
solver.add(
     ( -219 * a1[22]
     + 14 * a1[17]
     + 14 * a1[1]
     + 157 * a1[0]
     + -229 * a1[13]
     + -152 * a1[9]
     + -53 * a1[2]
     + -184 * a1[10]
     + 181 * a1[12]
     + 242 * a1[15]
     + 212 * a1[16]
     + 153 * a1[20]
     + -147 * a1[19]
     + -54 * a1[11]
     - 169 * a1[6]
     - 23 * a1[8]
     + 6 * a1[5]
     + 133 * a1[14]
     - 1629
     + 63 * a1[4]
     + 97 * a1[18]
     + 27 * a1[7]
     - 151 * a1[21]
     + 12 * a1[3] ) == 0
)
#if return 18
solver.add(
    ( 252 * a1[0]
     + -143 * a1[18]
     + -181 * a1[14]
     + -227 * a1[5]
     + 172 * a1[16]
     + -131 * a1[21]
     + 122 * a1[15]
     + -52 * a1[7]
     + -23 * a1[2]
     + -173 * a1[11]
     + -122 * a1[17]
     + 211 * a1[6]
     + 98 * a1[22]
     + -178 * a1[12]
     + -40 * a1[4]
     + 70656
     - 226 * a1[10]
     - 144 * a1[13]
     + 29 * a1[8]
     + 72 * a1[20]
     + 155 * a1[3]
     - 18 * a1[19]
     + 246 * a1[9]) == 0
)

#if return 19
solver.add(
    ( 221 * a1[10]
     + 61 * a1[13]
     + 122 * a1[7]
     + -249 * a1[14]
     + 220 * a1[1]
     + -251 * a1[12]
     + -249 * a1[15]
     + -114 * a1[20]
     + -193 * a1[2]
     + 106 * a1[22]
     + -203 * a1[21]
     + -152 * a1[8]
     + -171 * a1[3]
     + 51 * a1[0]
     + 79 * a1[11]
     - 79 * a1[4]
     + 149 * a1[9]
     + 80 * a1[19]
     + 64992
     - 153 * a1[6]
     - (a1[5] << 6)
     + 23 * a1[17]
     - 20 * a1[16]) == (50 * a1[18])
)

#if return 20
solver.add(
     ( 138 * a1[12]
     + 161 * a1[10]
     + -23 * a1[2]
     + -41 * a1[8]
     + -90 * a1[21]
     + 76 * a1[14]
     + -198 * a1[7]
     + -45 * a1[5]
     + 244 * a1[20]
     + 76 * a1[6]
     + 173 * a1[9]
     + -132 * a1[1]
     + 227 * a1[0]
     + 42 * a1[17]
     - 41 * a1[11]
     + 133 * a1[4]
     - 8655
     + 101 * a1[3]
     - 254 * a1[15]
     + 138 * a1[19]
     - 120 * a1[13]
     + 109 * a1[16]
     - 48 * a1[18]) == (253 * a1[22])
)

#if return 21
solver.add(
     (-30 * a1[0]
     + 139 * a1[1]
     + 93 * a1[11]
     + -100 * a1[13]
     + -189 * a1[18]
     + 189 * a1[5]
     + -50 * a1[8]
     + -249 * a1[7]
     + 229 * a1[15]
     + 172 * a1[4]
     + -221 * a1[22]
     + -92 * a1[9]
     + 76 * a1[19]
     + -142 * a1[3]
     + 218 * a1[2]
     + 91 * a1[20]
     - 236 * a1[21]
     - 129 * a1[16]
     + 137 * a1[12]
     - 124 * a1[17]
     + 84 * a1[14]
     - 2495
     - 30 * a1[6]) == (11 * a1[10])
)

#if return 22
solver.add(
     ( 118 * a1[1]
     + 215 * a1[3]
     + -134 * a1[13]
     + 115 * a1[19]
     + -212 * a1[9]
     + -66 * a1[12]
     + 178 * a1[14]
     + 101 * a1[15]
     + 220 * a1[16]
     + 246 * a1[18]
     + 116 * a1[0]
     + -193 * a1[17]
     + -223 * a1[5]
     + 51 * a1[8]
     - 10 * a1[21]
     + 114 * a1[22]
     - (a1[20] << 7)
     + 249 * a1[7]
     + 17 * a1[4]
     - 66 * a1[10]
     + 36 * a1[2]
     - 75 * a1[6]
     - 58358) == (226 * a1[11])
)

#if return 0
solver.add(
    ( 46 * a1[18]
     + -118 * a1[10]
     + 219 * a1[4]
     + -156 * a1[9]
     + 70 * a1[5]
     + 56 * a1[20]
     + 116 * a1[3]
     + -108 * a1[21]
     + -119 * a1[17]
     + -83 * a1[13]
     + -152 * a1[19]
     + -76 * a1[22]
     + 188 * a1[0]
     + -81 * a1[15]
     + 98 * a1[11]
     + -215 * a1[14]
     + -215 * a1[6]
     + -35 * a1[12]
     - 72 * a1[8]
     - 132 * a1[7]
     + 10 * a1[1]
     + 103 * a1[2]
     + 54203) == 156 * a1[16]
)

check = solver.check()
print(check)

model = solver.model()
key = '' 

for i in range(strlen):
  key += chr(model[a1[i]].as_long())

c.sendline(bytes(key, 'utf-8'))
print(key)
print(c.recvline())
