from pwn import *
from libdebug import debugger
global OFFSET

OFFSET = 0x54

def write_license(t, bp):
    print(d.memory[d.regs.rbp - OFFSET, 8].hex())
    if bp.hit_count == 1:
        d.memory[d.regs.rbp - OFFSET, 8] = int('726cfc2d00000000', base=16).to_bytes(8, byteorder="little")
    elif bp.hit_count == 2:                                
        d.memory[d.regs.rbp - OFFSET, 8] = int('26c6defe00000000', base=16).to_bytes(8, byteorder="little")
    elif bp.hit_count == 3:                                
        d.memory[d.regs.rbp - OFFSET, 8] = int('db06562100000000', base=16).to_bytes(8, byteorder="little")
    elif bp.hit_count == 4:                                
        d.memory[d.regs.rbp - OFFSET, 8] = int('99f5c7d000000000', base=16).to_bytes(8, byteorder="little")
    elif bp.hit_count == 5:                                
        d.memory[d.regs.rbp - OFFSET, 8] = int('da4f493000000000', base=16).to_bytes(8, byteorder="little")

def check_license(t, bp):
    #this is to check if the write was successfully    
    print(d.memory[d.regs.rbp - OFFSET, 8].hex())

d = debugger("./leaked_license")

r = d.run()
bp = d.bp(0x12C1, file="leaked_license", callback=write_license)
bp2 = d.bp(0x12CC, file="leaked_license", callback=check_license)
d.cont()

r.recvuntil(b'Serial code: ')
print(r.recvline())
d.wait()
d.kill()
