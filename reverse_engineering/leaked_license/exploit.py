from pwn import *
from libdebug import debugger
global OFFSET

OFFSET = 0x54
#00000000726cfc2d
#                
#0000000026c6defe
#                
#00000000db065621
#                
#0000000099f5c7d0
#                
#00000000da4f4930

l0 = "726cfc2d"
l1 = "26c6defe"
l2 = "db065621"
l3 = "99f5c7d0"
l4 = "da4f4930" 

l = "726cfc2d26c6defedb06562199f5c7d0da4f4930"
def write_license(t, bp):
    print("--------before------------------")
    print(d.memory[d.regs.rbp - OFFSET, 8].hex())
    if bp.hit_count == 1:
        d.memory[d.regs.rbp - OFFSET, 8] = int('726cfc2d00000000', base=16).to_bytes(8, byteorder="little")
    elif bp.hit_count == 2:                                
        d.memory[d.regs.rbp - OFFSET, 8] = int('26c6defe00000000', base=16).to_bytes(8, byteorder="little")
    elif bp.hit_count == 3:                                
        d.memory[d.regs.rbp - OFFSET, 8] = int('db06562100000000', base=16).to_bytes(8, byteorder="little")
    elif bp.hit_count == 4:                                
        d.memory[d.regs.rbp - OFFSET, 8] = int('99f5c7d000000000', base=16).to_bytes(8, byteorder="little")
    elif bp.hit_count == 5:                                
        d.memory[d.regs.rbp - OFFSET, 8] = int('da4f493000000000', base=16).to_bytes(8, byteorder="little")

def write(t, bp):

    d.memory[d.regs.rbp - 0x58, 8*5] = b'726cfc2d26c6defedb06562199f5c7d0da4f4930'

def check_license(t, bp):
    print("--------after-------------------")
    #print("check license:")
    print(d.memory[d.regs.rbp - OFFSET, 8].hex())

def print_serial(t, bp):
    print("------*********----------")
    print(d.memory[d.regs.rbp - 0x60 - 0x10, 20].hex())

d = debugger("./leaked_license")

r = d.run()
bp = d.bp(0x12C1, file="leaked_license", callback=write_license)
bp2 = d.bp(0x12CC, file="leaked_license", callback=check_license)
bp3 = d.bp(0x1422, file="leaked_license", callback=print_serial)
bp4 = d.bp(0x1446, file="leaked_license", callback=print_serial)
d.cont()

r.recvuntil(b'Serial code: ')
print(r.recvline())
d.wait()
d.kill()
