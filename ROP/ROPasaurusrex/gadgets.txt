


Gadgets
=======


0x080490da: adc al, 0x68; adc al, 0xc0; add al, 8; call eax; 
0x0804915a: adc al, 0xc0; add al, 8; add ecx, ecx; ret; 
0x080490dc: adc al, 0xc0; add al, 8; call eax; 
0x080490dc: adc al, 0xc0; add al, 8; call eax; add esp, 0x10; leave; ret; 
0x08049129: adc al, 0xc0; add al, 8; call edx; 
0x08049129: adc al, 0xc0; add al, 8; call edx; add esp, 0x10; leave; ret; 
0x08049126: adc byte ptr [eax + 0x68], dl; adc al, 0xc0; add al, 8; call edx; 
0x080491d8: adc byte ptr [eax], bh; mov ecx, dword ptr [ebp - 4]; leave; lea esp, [ecx - 4]; ret; 
0x08049192: adc byte ptr [ebx + 0x6804ec], al; add al, byte ptr [eax]; add byte ptr [ebp - 0x1077b], cl; call dword ptr [eax + 0x6a]; 
0x080490e4: adc cl, cl; ret; 
0x0804915c: add al, 8; add ecx, ecx; ret; 
0x080490de: add al, 8; call eax; 
0x080490de: add al, 8; call eax; add esp, 0x10; leave; ret; 
0x0804912b: add al, 8; call edx; 
0x0804912b: add al, 8; call edx; add esp, 0x10; leave; ret; 
0x08049198: add al, byte ptr [eax]; add byte ptr [ebp - 0x1077b], cl; call dword ptr [eax + 0x6a]; 
0x080491da: add byte ptr [eax], al; add byte ptr [eax], al; mov ecx, dword ptr [ebp - 4]; leave; lea esp, [ecx - 4]; ret; 
0x080490eb: add byte ptr [eax], al; add byte ptr [eax], al; nop; ret; 
0x08049164: add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x080491db: add byte ptr [eax], al; add byte ptr [ebx - 0x723603b3], cl; popal; cld; ret; 
0x08049007: add byte ptr [eax], al; add ebx, 0x2feb; mov eax, dword ptr [ebx - 4]; test eax, eax; je 0x101b; call eax; 
0x080491f5: add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x0804900d: add byte ptr [eax], al; mov eax, dword ptr [ebx - 4]; test eax, eax; je 0x101b; call eax; 
0x080491dc: add byte ptr [eax], al; mov ecx, dword ptr [ebp - 4]; leave; lea esp, [ecx - 4]; ret; 
0x080490ed: add byte ptr [eax], al; nop; ret; 
0x08049166: add byte ptr [eax], al; ret; 
0x0804919a: add byte ptr [ebp - 0x1077b], cl; call dword ptr [eax + 0x6a]; 
0x080491dd: add byte ptr [ebx - 0x723603b3], cl; popal; cld; ret; 
0x080491e7: add byte ptr [ebx - 0x7d], dl; in al, dx; or al, ch; mov edi, 0x81fffffe; ret; 
0x080491f4: add byte ptr cs:[eax], al; add esp, 8; pop ebx; ret; 
0x080490ea: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; ret; 
0x08049163: add byte ptr es:[eax], al; add byte ptr [eax], al; ret; 
0x08049159: add eax, 0x804c014; add ecx, ecx; ret; 
0x080491f3: add ebp, dword ptr [esi]; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x08049009: add ebx, 0x2feb; mov eax, dword ptr [ebx - 4]; test eax, eax; je 0x101b; call eax; 
0x0804915e: add ecx, ecx; ret; 
0x080490e2: add esp, 0x10; leave; ret; 
0x080491d6: add esp, 0x10; mov eax, 0; mov ecx, dword ptr [ebp - 4]; leave; lea esp, [ecx - 4]; ret; 
0x080491a9: add esp, 0x10; nop; leave; ret; 
0x0804901b: add esp, 8; pop ebx; ret; 
0x08049083: call 0x1030; hlt; mov ebx, dword ptr [esp]; ret; 
0x080491a4: call 0x1040; add esp, 0x10; nop; leave; ret; 
0x08049004: call 0x10b0; add ebx, 0x2feb; mov eax, dword ptr [ebx - 4]; test eax, eax; je 0x101b; call eax; 
0x08049153: call 0x10c0; mov byte ptr [0x804c014], 1; leave; ret; 
0x080491a0: call dword ptr [eax + 0x6a]; 
0x08049081: call dword ptr [eax - 0x18]; 
0x08049019: call eax; 
0x080490e0: call eax; add esp, 0x10; leave; ret; 
0x08049019: call eax; add esp, 8; pop ebx; ret; 
0x0804912d: call edx; 
0x0804912d: call edx; add esp, 0x10; leave; ret; 
0x0804907e: cdq; sar bh, 1; call dword ptr [eax - 0x18]; 
0x080491e0: cld; leave; lea esp, [ecx - 4]; ret; 
0x080491e4: cld; ret; 
0x0804900c: das; add byte ptr [eax], al; mov eax, dword ptr [ebx - 4]; test eax, eax; je 0x101b; call eax; 
0x080491df: dec ebp; cld; leave; lea esp, [ecx - 4]; ret; 
0x080490a0: endbr32; ret; 
0x08049088: hlt; mov ebx, dword ptr [esp]; ret; 
0x080490d9: in al, dx; adc al, 0x68; adc al, 0xc0; add al, 8; call eax; 
0x08049125: in al, dx; adc byte ptr [eax + 0x68], dl; adc al, 0xc0; add al, 8; call edx; 
0x080491ea: in al, dx; or al, ch; mov edi, 0x81fffffe; ret; 
0x08049151: in al, dx; or al, ch; push 0xc6ffffff; add eax, 0x804c014; add ecx, ecx; ret; 
0x080490d7: in eax, 0x83; in al, dx; adc al, 0x68; adc al, 0xc0; add al, 8; call eax; 
0x08049123: in eax, 0x83; in al, dx; adc byte ptr [eax + 0x68], dl; adc al, 0xc0; add al, 8; call edx; 
0x080491d5: inc dword ptr [ebx + 0xb810c4]; add byte ptr [eax], al; add byte ptr [ebx - 0x723603b3], cl; popal; cld; ret; 
0x080491a8: inc dword ptr [ebx - 0x366fef3c]; ret; 
0x08049157: inc esi; add eax, 0x804c014; add ecx, ecx; ret; 
0x08049017: je 0x101b; call eax; 
0x08049017: je 0x101b; call eax; add esp, 8; pop ebx; ret; 
0x0804907c: lea eax, [ebx - 0x2f67]; push eax; call 0x1030; hlt; mov ebx, dword ptr [esp]; ret; 
0x080490e8: lea esi, [esi]; nop; ret; 
0x08049134: lea esi, [esi]; ret; 
0x080490e7: lea esi, cs:[esi]; nop; ret; 
0x080491e2: lea esp, [ecx - 4]; ret; 
0x080491e1: leave; lea esp, [ecx - 4]; ret; 
0x080490e5: leave; ret; 
0x0804901c: les ecx, ptr [eax]; pop ebx; ret; 
0x080490e3: les edx, ptr [eax]; leave; ret; 
0x080491d7: les edx, ptr [eax]; mov eax, 0; mov ecx, dword ptr [ebp - 4]; leave; lea esp, [ecx - 4]; ret; 
0x080491aa: les edx, ptr [eax]; nop; leave; ret; 
0x080490e9: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; nop; ret; 
0x08049162: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x08049158: mov byte ptr [0x804c014], 1; leave; ret; 
0x080491d9: mov eax, 0; mov ecx, dword ptr [ebp - 4]; leave; lea esp, [ecx - 4]; ret; 
0x0804900f: mov eax, dword ptr [ebx - 4]; test eax, eax; je 0x101b; call eax; 
0x08049122: mov ebp, esp; sub esp, 0x10; push eax; push 0x804c014; call edx; 
0x080490d6: mov ebp, esp; sub esp, 0x14; push 0x804c014; call eax; 
0x08049089: mov ebx, dword ptr [esp]; ret; 
0x080491de: mov ecx, dword ptr [ebp - 4]; leave; lea esp, [ecx - 4]; ret; 
0x080491ed: mov edi, 0x81fffffe; ret; 
0x0804909f: nop; endbr32; ret; 
0x080491ac: nop; leave; ret; 
0x080490af: nop; mov ebx, dword ptr [esp]; ret; 
0x0804909d: nop; nop; endbr32; ret; 
0x080490ae: nop; nop; mov ebx, dword ptr [esp]; ret; 
0x0804909b: nop; nop; nop; endbr32; ret; 
0x080490ac: nop; nop; nop; mov ebx, dword ptr [esp]; ret; 
0x08049099: nop; nop; nop; nop; endbr32; ret; 
0x080490aa: nop; nop; nop; nop; mov ebx, dword ptr [esp]; ret; 
0x080490ef: nop; ret; 
0x080491eb: or al, ch; mov edi, 0x81fffffe; ret; 
0x08049152: or al, ch; push 0xc6ffffff; add eax, 0x804c014; add ecx, ecx; ret; 
0x0804915d: or byte ptr [ecx], al; leave; ret; 
0x0804901e: pop ebx; ret; 
0x080491e3: popal; cld; ret; 
0x080491a2: push 0; call 0x1040; add esp, 0x10; nop; leave; ret; 
0x080490db: push 0x804c014; call eax; 
0x080490db: push 0x804c014; call eax; add esp, 0x10; leave; ret; 
0x08049128: push 0x804c014; call edx; 
0x08049128: push 0x804c014; call edx; add esp, 0x10; leave; ret; 
0x08049154: push 0xc6ffffff; add eax, 0x804c014; add ecx, ecx; ret; 
0x080490a2: push ds; sti; ret; 
0x08049082: push eax; call 0x1030; hlt; mov ebx, dword ptr [esp]; ret; 
0x08049127: push eax; push 0x804c014; call edx; 
0x08049127: push eax; push 0x804c014; call edx; add esp, 0x10; leave; ret; 
0x08049121: push ebp; mov ebp, esp; sub esp, 0x10; push eax; push 0x804c014; call edx; 
0x080490d5: push ebp; mov ebp, esp; sub esp, 0x14; push 0x804c014; call eax; 
0x08049087: push esp; mov ebx, dword ptr [esp]; ret; 
0x0804910b: ret 0xe8c1; 
0x0804900a: ret; 
0x08049107: rol byte ptr [eax + ecx], 0x89; ret 0xe8c1; 
0x0804915b: rol byte ptr [eax + ecx], 1; leave; ret; 
0x08049016: sal byte ptr [edx + eax - 1], 0xd0; add esp, 8; pop ebx; ret; 
0x0804907f: sar bh, 1; call dword ptr [eax - 0x18]; 
0x0804908a: sbb al, 0x24; ret; 
0x080490a3: sti; ret; 
0x08049124: sub esp, 0x10; push eax; push 0x804c014; call edx; 
0x080490d8: sub esp, 0x14; push 0x804c014; call eax; 
0x08049150: sub esp, 8; call 0x10c0; mov byte ptr [0x804c014], 1; leave; ret; 
0x08049015: test eax, eax; je 0x101b; call eax; 
0x08049015: test eax, eax; je 0x101b; call eax; add esp, 8; pop ebx; ret; 

131 gadgets found
